/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&sk {
    // don't release mods on other mods presses

    ignore-modifiers;
};

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"

        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        o_oe: tap_dance_oe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp O>, <&kp SEMI>;
        };

        a_ae: tap_dance_ae {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp A>, <&kp SQT>;
        };

        u_ue: tap_dance_ue {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&kp LBKT>;
        };

        z_sz: tap_dance_sz {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Y>, <&kp MINUS>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        combo_accent {
            timeout-ms = <200>;
            key-positions = <32 33>;
            bindings = <&mo 3>;
        };

        // internal-left & external-right thumb keys
        // both left thumb keys

        left_eckig_klammer {
            key-positions = <3 4>;
            bindings = <&kp RA(N8)>;
        };

        right_eckig_klammer {
            bindings = <&kp RA(N9)>;
            key-positions = <5 6>;
        };

        left_rund_klammer {
            bindings = <&kp LS(N8)>;
            key-positions = <23 24>;
        };

        right_rund_klammer {
            bindings = <&kp LS(N9)>;
            key-positions = <26 25>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <21 22>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <22 23>;
        };

        ausrufezeichen {
            bindings = <&kp EXCLAMATION>;
            key-positions = <0 1>;
        };

        underscore {
            bindings = <&kp LS(MINUS)>;
            key-positions = <28 29>;
        };

        windows {
            bindings = <&kp LEFT_WIN>;
            key-positions = <20 21>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 10>;
        };

        numberlayer {
            bindings = <&mo 4>;
            key-positions = <31 32>;
        };

        questionmark {
            bindings = <&kp LS(MINUS)>;
            key-positions = <1 2>;
        };

        quotation {
            bindings = <&kp AT_SIGN>;
            key-positions = <4 5>;
        };

        hashtag {
            bindings = <&kp HASH>;
            key-positions = <3 6>;
        };

        percent {
            bindings = <&kp LS(N5)>;
            key-positions = <8 1>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <23 26>;
        };

        at_sign {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <24 25>;
        };

        // left index & middle fingers (home-row)
        // hold control & space for Adobe workflowleft_eckig_klammer {};
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            label = "Base";
            bindings = <
&kp Q          &kp W      &kp E  &kp R  &kp T    &z_sz  &u_ue  &kp I      &o_oe      &kp BACKSPACE
&a_ae          &kp S      &kp D  &kp F  &kp G    &kp H  &kp J  &kp K      &kp L      &kp P
&kp Z          &kp X      &kp C  &kp V  &kp B    &kp N  &kp M  &kp COMMA  &kp DOT    &kp RIGHT_SHIFT
&kp BACKSPACE  &kp ENTER                                                  &kp SPACE  &mo 1
            >;
        };

        // Numbers and high frequency symbols
        // Main modifiers and arrow keys

        ext_layer {
            label = "Mods";
            bindings = <
&kp ESC    &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_PAUSE    &kp PG_UP     &kp HOME  &kp UP    &kp END    &kp CAPS
&sk LALT   &sk LGUI    &sk LSHIFT  &sk LCTRL   &kp RALT       &kp PG_DN     &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
&kp LC(Z)  &kp LC(X)   &kp LC(C)   &kp TAB     &kp LC(V)      &kp LC(BSPC)  &kp BSPC  &trans    &trans     &trans
&trans     &kp LCTRL                                                                            &kp ENTER  &none
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            label = "FRow";
            bindings = <
&kp F1    &kp F2    &kp F3      &kp F4     &kp F5      &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
&sk LALT  &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT    &kp F11  &kp F12  &kp PRINTSCREEN  &trans  &trans
&none     &none     &none       &none      &none       &none    &none    &none            &none   &none
&none     &none                                                                           &none   &none
            >;
        };

        // Low frequency symbols.
        // Used to type regional accents.
        // Used to change the keyboard's settings.

        settings_layer {
            label = "Sett.";
            bindings = <
&bootloader  &none  &none  &bt BT_CLR    &bt BT_SEL 0    &bt BT_SEL 3  &none  &none  &none  &bootloader
&none        &none  &none  &out OUT_USB  &bt BT_SEL 1    &bt BT_SEL 4  &none  &none  &none  &none
&none        &none  &none  &out OUT_USB  &bt BT_SEL 2    &bt BT_SEL 5  &none  &none  &none  &none
&none        &none                                                                   &none  &none
            >;
        };

        numbers {
            bindings = <
&kp F1   &kp F2   &kp F3      &kp F4             &kp F5             &kp N0     &kp N7        &kp N8        &kp N9        &trans
&kp F6   &kp F7   &kp F8      &kp F9             &kp F10            &kp PLUS   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_DIVIDE
&kp F11  &kp F12  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK
&trans   &trans                                                                                            &trans        &trans
            >;
        };
    };
};
